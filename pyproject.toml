[build-system]
requires = ["flit_core >=3.2"]
build-backend = "flit_core.buildapi"

[project]
name = "freva-deployment"
authors = [{name = "DKRZ, Clint", email = "freva@dkrz.de"}]
readme = "README.md"
license = {file = "LICENSE"}
classifiers = [
               "Development Status :: 3 - Alpha",
               "Environment :: Console",
               "Intended Audience :: Developers",
               "Intended Audience :: Science/Research",
               "License :: OSI Approved :: BSD License",
               "Operating System :: POSIX :: Linux",
               "Programming Language :: Python :: 3",
]
dynamic = ["version"]
description = "Deployment of the Free Evaluation Framework Freva"
requires-python = ">=3.8"
dependencies = [ "appdirs",
             "ansible",
             "ansible-core",
             "namegenerator",
             "cowsay",
             "npyscreen",
             "paramiko",
             "packaging",
             "PyMySQL",
             "PyYAML",
             "rich",
             "rich-argparse",
             "toml",
             "tomlkit",
             "typing_extensions",
             "requests",
]
[project.optional-dependencies]
dev = ["flit", "tox"]
win = ["cryptography", "windows-curses", "pyinstaller", "mock", "pywin32"]
unix = ["cryptography", "pyinstaller", "mock"]
doc = ["pydata-sphinx-theme",
       "sphinx",
       "sphinx-copybutton",
       "sphinxext-opengraph",
       "recommonmark",
       "linkify",
       "linkify-it-py",
       "sphinx_sitemap",
       "sphinx_favicon",
       "sphinx_togglebutton",
       "myst-parser",
       "sphinx-design",
       "sphinx-execute-code-python3",
]

[project.urls]
Documentation = "https://github.com/freva-org/freva-admin"
Issues = "https://github.com/freva-org/freva-admin/issues"
Source = "https://github.com/freva-org/freva-admin"
Home = "https://github.com/freva-org/freva-admin"

[project.scripts]
deploy-freva-cmd = "freva_deployment.cli:deploy"
freva-migrate = "freva_deployment.cli:migrate"
deploy-freva = "freva_deployment.cli:main_cli"


[tool.flit.sdist]
include = ["assets/*"]
exclude = ["assets/unix_mock"]

[tool.flit.external-data]
directory = "assets"

[package-data]
freva_deployment = ["py.typed", "versions.json"]

[tool.tox]
legacy_tox_ini = """
[tox]
min_version = 4.0
env_list = types, lint, test
[testenv]
parallel_show_output = false
[testenv:test]
deps = -e .

commands =
    deploy-freva cmd --help
    deploy-freva --help

[testenv:docs]
deps = .[doc]
setenv =
    LC_ALL = C
    LANG = C
allowlist_externals = make
commands = make -C docs clean
           make -C docs html
[testenv:lint]
deps = .
       black
       isort
commands =
    isort --check --profile black -t py311 -l 79 src
[testenv:types]
deps = .
       mypy
       types-paramiko
       types-requests
       types-toml
       pytest-stub
       types-PyMySQL
commands = mypy --install-types --non-interactive
[testenv:release]
deps = git-python
       packaging
       tomli
       requests
commands = python3 release.py tag freva_deployment
[testenv:build]
deps = -e .
       pyinstaller
       cryptography
commands = pyinstaller --clean --noconfirm deploy-freva.spec
       """
