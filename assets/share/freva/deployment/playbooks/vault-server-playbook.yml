---
- hosts: vault

  vars:
    ansible_python_interpreter: "{{ vault_ansible_python_interpreter }}"
    continer_name: "{{ vault_name }}"
    compose_file: "{{vault_data_path|regex_replace('^~', ansible_env.HOME)}}/compose_services/{{vault_name}}-compose.yml"
    vault_volumes:
      - '{{vault_data_path|regex_replace("^~", ansible_env.HOME)}}/{{project_name}}/vault_service/config:/data:z'
      - '{{vault_data_path|regex_replace("^~", ansible_env.HOME)}}/{{project_name}}/vault_service/files:/vault/file:z'
    use_become: "{{ vault_ansible_become_user is defined and vault_ansible_become_user != '' }}"
  tasks:
    - name: Copying docker/podman wrapper script
      copy:
        src: "{{ asset_dir }}/scripts/docker-or-podman"
        dest: /tmp/docker-or-podman
        mode: "0775"
    - name: Registering systemctl path
      stat:
        path: /usr/bin/systemctl
      register: systemctl
    - name: Registering vault volume path
      stat:
        path: /usr/bin/systemctl
      register: vault_volume
    - name: Set vault valume path
      set_fact:
        exists: vault_volume.stat.exists
    - name: Stopping services and deleting existing containers
      shell: >
        systemctl stop {{vault_name}};
        systemctl disable {{vault_name}};
        /tmp/docker-or-podman rm {{vault_name}};
        exit 0
      ignore_errors: true
      become: "{{use_become}}"
    - name: Pulling container
      become: "{{use_become}}"
      shell: /tmp/docker-or-podman pull ghcr.io/freva-clint/freva-deployment:{{vault_version}}
    - name: Copying systemd files
      copy:
        src: "{{ asset_dir }}/scripts/create_systemd.py"
        dest: /tmp/create_systemd.py
        mode: "0755"
    - name: Creating directory structure
      file:
        state: directory
        path: "{{ item }}"
      with_items:
        - "{{vault_data_path|regex_replace('^~', ansible_env.HOME)}}/{{ project_name }}/vault_service/config"
        - "{{vault_data_path|regex_replace('^~', ansible_env.HOME)}}/{{ project_name }}/vault_service/files"
      become: "{{use_become}}"
    - name: Copying public key file to target machine
      copy:
        src: "{{ vault_keyfile }}"
        dest: "{{vault_data_path|regex_replace('^~', ansible_env.HOME)}}/{{project_name}}/vault_service/config/freva.crt"
      become: "{{use_become}}"
    - name: Creating compose directory structure
      file:
        path: "{{vault_data_path|regex_replace('^~', ansible_env.HOME)}}/compose_services"
        state: directory
        recurse: true
      become: "{{use_become}}"
    - name: Creating compose file
      become: "{{use_become}}"
      template:
        src: "{{ asset_dir }}/playbooks/vault-server-compose-template.yml"
        dest: "{{vault_data_path|regex_replace('^~', ansible_env.HOME)}}/compose_services/{{vault_name}}-compose.yml"
    - name: Creating system services
      become: "{{use_become}}"
      shell: |
        /tmp/create_systemd.py {{vault_name}} compose --enable --project-name {{vault_name}} -f {{compose_file}} up --remove-orphans
      environment:
        DEBUG: '{{ debug }}'
      when: systemctl.stat.exists == true
    - pause: seconds=35
    - name: Deleting existing infrastructure
      shell: /tmp/docker-or-podman exec {{ vault_name }} vault kv delete kv/read-eval
      become: "{{use_become}}"
    - name: Inserting server infrastructure
      become: "{{use_become}}"
      shell: >
        /tmp/docker-or-podman exec {{ vault_name }}
        vault kv put kv/read-eval db.container={{ vault_name }}
        db.host={{ vault_db_host }}
        db.port={{ vault_db_port }}
        db.passwd='{{ vault_passwd }}'
        db.user={{ vault_db_user }}
        db.db={{ vault_db }}
      become: "{{use_become}}"
    - name: Deleting auxillary files
      file:
        state: absent
        path: "{{ item }}"
      with_items:
        - "/tmp/create_systemd.py"
        - "/tmp/docker-or-podman"
