---
- name: Running common conda tasks
  include_tasks: "conda.yml"

- name: Write SSL cert and key to files
  copy:
    content: "{{ item.content }}"
    dest: "{{ data_dir }}/config/{{ item.filename }}"
  loop:
    - { filename: "client-cert.pem", content: "{{ cache_information.ssl_cert }}" }
    - { filename: "client-key.pem",  content: "{{ cache_information.ssl_key }}"  }
  when: (cache_information.ssl_cert | length > 0) and (cache_information.ssl_key | length > 0)

- name: Creating environment file
  template:
    src: "service.env.j2"
    dest: "{{ data_dir }}/config/service.env"
    owner: "{{ uid }}"
    group: "{{ gid }}"
  vars:
    service_name: "{{ freva_rest_name }}"
    env_vars:
      API_SOLR_CORE: "files"
      API_PORT: "{{freva_rest_port}}"
      API_PROXY: "{{freva_rest_proxy_url}}"
      COLUMNS: 140
      API_OIDC_CLIENT_ID: "{{freva_rest_oidc_client}}"
      API_OIDC_DISCOVERY_URL: "{{freva_rest_oidc_url}}"
      API_OIDC_CLIENT_SECRET: "{{freva_rest_oidc_client_secret}}"
      API_REDIS_HOST: "{{cache_information.host}}"
      API_REDIS_PASSWORD: "{{cache_information.passwd}}"
      API_REDIS_USER: "{{cache_information.user}}"
      API_REDIS_SSL_CERTFILE: "{{ data_dir }}/config/client-cert.pem"
      API_REDIS_SSL_KEYFILE: "{{ data_dir }}/config/client-key.pem"
      API_LOG_DIR: "{{ data_dir }}/logs"
      API_SOLR_HOST: "{{freva_rest_search_server_host}}:8983"
      API_MONGO_HOST: "{{freva_rest_mongodb_server_host}}:27017"
      API_MONGO_PASSWORD: "{{freva_rest_db_passwd}}"
      API_MONGO_DB: "search_stats"
      API_MONGO_USER: "{{freva_rest_db_user}}"
      CONDA_PREFIX: "{{ conda_path }}"

- name: Creating systemd unit service
  template:
    src: "systemd-conda.j2"
    dest: "{{ systemd_unit_dir }}/{{ freva_rest_name }}.service"
    mode: "0644"

- name: Reload systemd daemon
  systemd:
    daemon_reload: true
    scope: "{{ 'system' if ansible_become is true else 'user'}}"

- name: Enable and start the {{ freva_rest_name }} service
  systemd:
    name: "{{ freva_rest_name }}"
    state: started
    enabled: true
    scope: "{{ 'system' if ansible_become is true else 'user'}}"
