---
- name: Install Java via mamba
  shell:
    cmd: >
      {{ data_dir }}/bin/micromamba install -p {{ conda_path }}
      -c conda-forge --override-channels 'openjdk<23' skopeo jq
  environment:
    MAMBA_ROOT_PREFIX: "{{ conda_path }}"


- name: Create keycloak directory
  file:
    path: "{{ keycloak_dir }}/data/import"
    state: directory
    mode: '0755'
    recurse: true

- name: Download Keycloak
  unarchive:
    src: "{{ keycloak_url }}"
    dest: "{{ keycloak_dir }}"
    remote_src: true
    extra_opts: [--strip-components=1]
    creates: "{{ keycloak_dir }}/bin/kc.sh"

- name: Download realm export file
  get_url:
    url: "{{ keycloak_realm_import_url }}"
    dest: "{{ keycloak_realm_file_path }}"
    mode: '0644'

- name: Patch Keycloak installation using OCI image
  block:
    - name: Create temp directory for OCI extraction
      tempfile:
        state: directory
        suffix: keycloak_oci
      register: oci_tmp

    - name: Pull Keycloak OCI image
      shell: >
        {{ conda_path }}/bin/skopeo copy
        docker://quay.io/keycloak/keycloak:26.2.5
        oci:{{ oci_tmp.path }}/oci
      args:
        creates: "{{ oci_tmp.path }}/oci/index.json"

    - name: Create rootfs directory
      file:
        path: "{{ oci_tmp.path }}/rootfs"
        state: directory

    - name: Extract all OCI layers
      shell: |
        for layer in {{ oci_tmp.path }}/oci/blobs/sha256/*; do
          tar -xf "$layer" -C "{{ oci_tmp.path }}/rootfs" || true
        done
      args:
        chdir: "{{ oci_tmp.path }}"

    - name: Copy keycloak runtime files from image
      copy:
        src: "{{ oci_tmp.path }}/rootfs/opt/keycloak/"
        dest: "{{ keycloak_dir }}/"
        remote_src: true

  always:

    - name: Make files and directories writable before deletion
      shell: |
        chmod -R u+rwX "{{ oci_tmp.path }}"
      ignore_errors: true

    - name: Remove temp OCI directory
      file:
        path: "{{ oci_tmp.path }}"
        state: absent


- name: Prep keycloak
  shell:
    cmd: >
      {{ bash_cmd }} {{ keycloak_dir }}/bin/kc.sh build
  environment:
    JAVA_HOME: "{{ conda_path }}"
    JAVA_OPTS_APPEND: "-Djava.net.preferIPv4Stack=true"
    KEYCLOAK_ADMIN: "{{ admin_user | trim }}"
    KEYCLOAK_ADMIN_PASSWORD: "secret"

- name: Create systemd unit service
  template:
    src: "keycloak.j2"
    dest: "{{ systemd_unit_dir }}/{{ project_name }}-keycloak.service"
    mode: "0644"

- name: Reload systemd daemon
  systemd:
    daemon_reload: true
    scope: "{{ 'system' if ansible_become is true else 'user'}}"

- name: Enable and start Keycloak service
  systemd:
    name: "{{ project_name }}-keycloak.service"
    enabled: true
    state: started
    scope: "{{ 'system' if ansible_become is true else 'user'}}"
