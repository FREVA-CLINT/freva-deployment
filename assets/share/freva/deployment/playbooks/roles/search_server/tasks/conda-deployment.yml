---
- name: Running common conda tasks
  include_tasks: "conda.yml"

- name: Creating environment file
  template:
    src: "service.env.j2"
    dest: "{{ data_dir }}/config/service.env"
    owner: "{{ uid }}"
    group: "{{ gid }}"
  vars:
    service_name: "{{ search_server_name }}"
    env_vars:
      API_SOLR_PORT: "8983"
      API_SOLR_HEAP: "{{ search_server_solr_mem | default('4g') }}"
      SOLR_JETTY_HOST: "0.0.0.0"
      CONDA_PREFIX: "{{ conda_path }}"
      API_DATA_DIR: "{{ data_dir }}/data"
      SOLR_PID_DIR: "{{ data_dir }}/config"
      SOLR_LOGS_DIR: "{{ data_dir }}/solr"
      API_LOG_DIR: "{{ data_dir }}/logs"
      API_CONFIG_DIR: "{{ data_dir }}/config"

- name: Creating systemd unit service
  template:
    src: "systemd-conda-{{ search_server_service }}.j2"
    dest: "{{ systemd_unit_dir }}/{{ search_server_name }}.service"
    mode: "0644"

- name: Reload systemd daemon
  systemd:
    daemon_reload: true
    scope: "{{ 'system' if ansible_become is true else 'user'}}"

- name: Enable and start the {{ search_server_name }} service
  systemd:
    name: "{{ search_server_name }}"
    state: started
    enabled: true
    scope: "{{ 'system' if ansible_become is true else 'user'}}"

- name: Wait for Solr to be available
  uri:
    url: "http://localhost:8983/solr/latest/admin/ping"
    status_code: 200
    timeout: 5
  register: result
  retries: 30
  delay: 5
  until: result.status == 200
  when: search_server_service == 'solr'

- name: Performing healthchecks
  shell: >
    {{conda_path}}/libexec/freva-rest-server/healthchecks.sh
    -s {{ search_server_service }}
  environment:
    PATH: "{{conda_path}}/bin:/usr/bin:/bin:/usr/local/bin"
