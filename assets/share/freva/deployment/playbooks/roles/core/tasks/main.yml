---
- name: Include role vars
  include_vars: "{{ role_path }}/files/vars.yml"

- name: Getting status of the freva installation
  stat:
    path: "{{ core_install_dir | regex_replace('^~', ansible_env.HOME)}}/bin/freva"
  register: freva_path

- name: Get freva conf path
  stat:
    path: "{{ core_root_dir | regex_replace('^~', ansible_env.HOME)}}/freva/evaluation_system.conf"
  register: eval_path

- name: Creating temp. dir
  tempfile:
    state: directory
    prefix: evaluation_system
  register: tempdir

- name: Setting up core lib
  block:
    - name: Downloading micromamba
      script: >
        {{ asset_dir }}/scripts/download_conda.py
        {{ tempdir.path }}

    - name: Overriding install fact
      set_fact:
        conda_cmd: "create"
      when: not freva_path.stat.exists

    - name: "{{conda_cmd}} freva deps"
      shell: >
        {{ tempdir.path }}/bin/micromamba {{ conda_cmd }}
        -p {{ core_install_dir }} -c conda-forge --override-channels
        -y {{ conda_pkgs | join(' ') }}

    - name: Installing freva - {{ core_version }}
      shell: >
        {{ tempdir.path }}/bin/micromamba run
        -p {{ core_install_dir }} python -m pip install -U --no-deps
        freva=={{ core_version }}

    - name: Creating conda dir
      file:
        path: "{{ core_install_dir }}"
        mode: "0755"
        group: "{{ core_admin_group if core_admin_group is defined and core_admin_group != '' else omit}}"
        recurse: true
      when: not freva_path.stat.exists

    - name: Preparing creation of directory structure
      file:
        path: "{{ core_root_dir | regex_replace('^~', ansible_env.HOME) }}"
        state: directory

    - name: Creating directory structure
      file:
        path: "{{ item }}"
        state: directory
        mode: "{{ '2775' if core_admin_group is defined and core_admin_group != '' else '2755' }}"
        group: "{{ core_admin_group if core_admin_group is defined and core_admin_group != '' else omit}}"
      loop:
        - "{{ core_root_dir | regex_replace('^~', ansible_env.HOME) }}/freva/"
        - "{{ core_root_dir | regex_replace('^~', ansible_env.HOME) }}/plugins/"

    - name: Ensure core directories exist
      file:
        path: "{{ item | regex_replace('^~', ansible_env.HOME) }}"
        state: directory
        mode: "3777"
      loop:
        - "{{ core_base_dir_location }}"
        - "{{ core_scheduler_output_dir }}"
        - "{{ core_preview_path }}"
      when: item | length != 0
      ignore_errors: true

    - name: Cloning the evluation_system reposiotry
      git:
        repo: "{{ core_git_url }}"
        dest: "{{tempdir.path}}/freva"
        executable: "{{ core_install_dir }}/bin/git"

    - name: Inserting evaluation_system.config file to temp location
      copy:
        src: "{{ core_dump }}"
        dest: "{{tempdir.path}}/freva/evaluation_system.conf"

    - name: Inserting evaluation_system.conf file
      copy:
        src: "{{tempdir.path}}/freva/evaluation_system.conf"
        dest: "{{ core_root_dir | regex_replace('^~', ansible_env.HOME)}}/freva/evaluation_system.conf"
        remote_src: true
        group: "{{ core_admin_group if core_admin_group is defined and core_admin_group != '' else omit}}"
        mode: "{{ '2664' if core_admin_group is defined and core_admin_group != '' else '2644' }}"
      when: not eval_path.stat.exists

    - name: Installing additional python packages
      command:
        cmd: "{{ conda_bin }}/python -m pip install {{item}}"
        creates: "{{ conda_bin }}/{{ item }}"
      with_items:
        - "jupyter-kernel-install"
        - "metadata-inspector"

    - name: Installing metadata-crawler
      script: >
        {{ asset_dir }}/scripts/download.py
        https://freva.gitlab-pages.dkrz.de/metadata-crawler-source/binaries/data-crawler
        -o {{ conda_sbin }}/data-crawler

    - name: Getting status of drs_config.toml file
      stat:
        path: "{{ core_root_dir | regex_replace('^~', ansible_env.HOME)}}/freva/drs_config.toml"
      register: drs_path

    - name: Inserting drs_config.toml file
      copy:
        src: "{{tempdir.path}}/assets/drs_config.toml"
        dest: "{{ core_root_dir | regex_replace('^~', ansible_env.HOME)}}/freva/drs_config.toml"
        remote_src: true
        group: "{{ core_admin_group if core_admin_group is defined and core_admin_group != '' else omit}}"
        mode: "{{ '2664' if core_admin_group is defined and core_admin_group != '' else '2644' }}"
      when: not drs_path.stat.exists

    - name: Configuring evaluation_system
      command:
        cmd: "$PYTHON3 deploy.py {{ core_install_dir | regex_replace('^~', ansible_env.HOME) }} -s --no-conda"
        chdir: "{{tempdir.path}}/freva"
      environment:
        PYTHON3: "{{ ansible_python_interpreter }}"
        EVALUATION_SYSTEM_CONFIG_FILE: "{{ core_root_dir | regex_replace('^~', ansible_env.HOME) }}/freva/evaluation_system.conf"
        PYTHON_VERSION: "{{core_python_version}}"

    - name: Copying Public key file
      copy:
        src: "{{ core_keyfile }}"
        dest: "{{ core_root_dir | regex_replace('^~', ansible_env.HOME) }}/freva/{{ project_name }}.crt"
        mode: "{{ '2664' if core_admin_group is defined and core_admin_group != '' else '2644' }}"
        group: "{{ core_admin_group if core_admin_group is defined and core_admin_group != '' else omit}}"

  always:
    - name: Deleting temporary files
      file:
        state: absent
        path: "{{tempdir.path}}"
