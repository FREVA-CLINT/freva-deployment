---
- name: Set vault valume path
  set_fact:
    exists: vault_volume.stat.exists
    upgrade_info_text: "vault"

- name: Creating project {{ base_path }}/{{ project_name }}/vault_service
  file:
    state: directory
    owner: "{{ uid }}"
    group: "{{ gid }}"
    recurse: true
    path: "{{ base_path }}/{{ project_name }}/vault_service"

- name: Cleaning existing directory structure
  file:
    path: '{{ base_path }}/{{ project_name }}/{{ vault_service }}'
    state: absent
  when: db_wipe is true

- name: Register path to vault keys
  stat:
    path: "{{ vault_token_path }}"
  register: token_path

- name: Check vault keys
  block:
    - name: Base64 decode vault key path
      command: base64 -d "{{vault_token_path}}"
  rescue:
    - name: Delete vault dir because its content is not valid
      file:
        state: absent
        path: "{{ base_path }}/{{ project_name }}/vault_service"
  when: token_path.stat.exists

- name: Creating service directory structure
  file:
    state: directory
    path: "{{ item }}"
    owner: "{{uid}}"
    group: "{{gid}}"
    recurse: true
  with_items:
    - "{{ base_path }}/{{ project_name }}/vault_service"
    - "{{ base_path }}/{{ project_name }}/vault_service/config"
    - "{{ base_path }}/{{ project_name }}/vault_service/files"

- name: Running common conda tasks
  include_tasks: "{{ general_tasks }}/conda.yml"

- name: Build vault service
  include_tasks: "{{ role_path }}/tasks/build-vault.yml"

- name: Enable and start the freva vault server
  systemd:
    name: "{{ project_name }}-vault"
    state: started
    enabled: true
    scope: "{{ 'system' if ansible_become is true else 'user'}}"

- pause: seconds=15

- name: Add DB secrets to vault
  shell: >
    {{ conda_path }}/bin/add-vault-secret
    data -s db.container {{ vault_name }} -s db.host {{ vault_db_host }}
    -s db.port {{ vault_db_port }} -s db.db {{ vault_db }}
    -s db.passwd '{{ debug | ternary(root_passwd, vault_passwd) }}'
    -s db.user {{ debug | ternary('root', vault_db_user) }}
  environment:
    ROOT_PW: "{{ root_passwd }}"
    PATH: "{{ conda_path }}/bin:/usr/bin:/bin:/usr/local/bin"
