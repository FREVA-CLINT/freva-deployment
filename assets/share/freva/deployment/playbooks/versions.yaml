---
- hosts: search_server
  vars:
    ansible_become_user: "{{ search_server_ansible_become_user | default('root') }}"
    ansible_user: "{{search_server_ansible_user}}"
    use_conda: "{{ search_server_use_conda | default(false) }}"
    conda_path: '{{search_server_data_path|regex_replace("^~", ansible_env.HOME)}}/{{ project_name }}'
  tasks:
    - name: Get freva-rest-api container version
      ansible.builtin.script:
        cmd: "{{ asset_dir }}/scripts/inspect.sh ghcr.io/freva-clint/freva-rest-api"
      become: "{{ search_server_ansible_become_user | default('root') is defined and search_server_ansible_become_user | default('root') != '' }}"
      register: search_server_container
      when: use_conda is false

    - name: Get freva-rest-api conda version
      shell: "{{conda_path}}/bin/freva-rest-server -V 2> /dev/null | awk '{print $NF}'"
      become: "{{ search_server_ansible_become_user | default('root') is defined and search_server_ansible_become_user | default('root') != '' }}"
      register: search_server_conda
      when: use_conda is true

    - name: Display freva_rest container version
      debug:
        msg: "{{ search_server_container.stdout }}"
      when: use_conda is false

    - name: Display freva_rest conda version
      debug:
        msg: "{{ search_server_conda.stdout }}"
      when: use_conda is true

    - name: Get solr container version
      register: solr_container
      shell:
        # We don't have a solr container anymore, freva-rest takes care of solr.
        cmd: echo 10.0.0
      when: use_conda is false

    - name: Get solr conda version
      register: solr_conda
      shell:
        cmd: >
          {{ansible_python_interpreter}} -c "from urllib.request import urlopen;
          import json;
          conn=urlopen('http://localhost:8983/solr/admin/info/system');
          print(json.loads(conn.read().decode()).get('lucene', {}).get('solr-spec-version', '0.0.0'));
          conn.close()" 2> /dev/null || echo
      when: use_conda is true

    - name: Display solr container version
      debug:
        msg: "{{ solr_container.stdout }}"
      when: use_conda is false

    - name: Display solr conda version
      debug:
        msg: "{{ solr_conda.stdout }}"
      when: use_conda is true

- hosts: web
  vars:
    ansible_become_user: "{{ web_ansible_become_user | default('root') }}"
    ansible_user: "{{web_ansible_user}}"
    use_conda: "{{ web_use_conda | default(false) }}"
    conda_path: '{{web_data_path|regex_replace("^~", ansible_env.HOME)}}/{{ project_name }}'
  tasks:
    - name: Get web container version
      register: web_container
      ansible.builtin.script:
        cmd: "{{ asset_dir }}/scripts/inspect.sh ghcr.io/freva-clint/freva-web"
      become: "{{ web_ansible_become_user | default('root') is defined and web_ansible_become_user | default('root') != '' }}"
      when: use_conda is false

    - name: Get web conda version
      register: web_conda
      shell:
        cmd: >
          {{ansible_python_interpreter}} -c "import json;
          print(json.load(open('{{conda_path}}/share/freva-web/app/package.json')).get('version', '0.0.0'))
          " 2> /dev/null || echo
      when: use_conda is true

    - name: Display web container version
      debug:
        msg: "{{ web_container.stdout }}"
      when: use_conda is false

    - name: Display web conda version
      debug:
        msg: "{{ web_conda.stdout }}"
      when: use_conda is true

- hosts: db
  vars:
    ansible_become_user: "{{ db_ansible_become_user | default('root') }}"
    ansible_user: "{{db_ansible_user}}"
    use_conda: "{{ db_use_conda | default(false) }}"
    conda_path: '{{db_data_path|regex_replace("^~", ansible_env.HOME)}}/{{ project_name }}'
  tasks:
    - name: Get vault version
      register: vault
      shell:
        cmd: >
          {{ansible_python_interpreter}} -c "from urllib.request import urlopen;
          import json;
          conn=urlopen('http://localhost:5002/vault/status');
          print(json.loads(conn.read().decode()).get('version', '0.0.0'));
          conn.close()" 2> /dev/null || echo

    - name: Display vault version
      debug:
        msg: "{{ vault.stdout }}"

    - name: Get db container version
      register: db_container
      ansible.builtin.script:
        cmd: "{{ asset_dir }}/scripts/inspect.sh docker.io/library/mysql"
      become: "{{ db_ansible_become_user | default('root') is defined and db_ansible_become_user | default('root') != '' }}"
      when: use_conda is false

    - name: Registering mysqld path
      stat:
        path: "{{ conda_path }}/bin/mysqld"
      register: mysqld_path
      when: use_conda is true

    - name: Set db_conda var
      set_fact:
        db_conda: "{{ 9.2 if mysqld_path.stat.exists else ''}}"
      when: use_conda is true

    - name: Display db container version
      debug:
        msg: "{{ db_container.stdout }}"
      when: use_conda is false

    - name: Display db conda version
      debug:
        msg: "{{ db_conda }}"
      when: use_conda is true

- hosts: core
  vars:
    ansible_user: "{{core_ansible_user}}"
  tasks:
    - name: Get core version
      register: core
      shell:
        cmd: "{{ core_install_dir | regex_replace('^~', ansible_env.HOME) }}/bin/freva -V 2> /dev/null | awk '{print $NF}';"

    - name: Display core version
      debug:
        msg: "{{ core.stdout }}"
