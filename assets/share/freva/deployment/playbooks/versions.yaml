---
- hosts: freva_rest
  vars:
    image: "ghcr.io/freva-clint/freva-rest-api"
    service_command: "freva-rest-server -V | awk '{print $NF}'"
    role: "freva-rest"
  tasks:
    - name: Include role vars
      include_vars: "{{asset_dir}}/playbooks/roles/{{ role }}/files/vars.yml"

    - name: Checking container versions
      script: >
        {{ asset_dir }}/scripts/inspect.sh {{ image }}
      become: "{{ ansible_become_user | default('root') is defined and ansible_become_user | default('root') != '' }}"
      register: version_container
      when: deployment_method in ["docker", "podman"]

    - name: Checking conda versions
      shell: "{{ service_command }} 2>/dev/null || true"
      become: "{{ ansible_become_user | default('root') is defined and ansible_become_user | default('root') != '' }}"
      environment:
        PATH: "{{conda_path}}/bin:/usr/bin:/usr:local/bin:/bin"
      register: version_cmd
      when: deployment_method == "conda"

    - name: Display freva_rest version
      debug:
        msg: "{{ version_container.stdout }}"
      when: deployment_method in ["docker", "podman"]

    - name: Display freva_rest version
      debug:
        msg: "{{ version_cmd.stdout }}"
      when: deployment_method == "conda"

- hosts: web
  vars:
    image: "ghcr.io/freva-clint/freva-web"
    service_command: >
      {{ansible_python_interpreter}} -c
      "import json; print(json.load(open('{{data_dir}}/app/package.json')).get('version', '0.0.0'))"
    role: "web"
  tasks:
    - name: Include role vars
      include_vars: "{{asset_dir}}/playbooks/roles/{{ role }}/files/vars.yml"

    - name: Checking container versions
      script: >
        {{ asset_dir }}/scripts/inspect.sh {{ image }}
      become: "{{ ansible_become_user | default('root') is defined and ansible_become_user | default('root') != '' }}"
      register: version_container
      when: deployment_method in ["docker", "podman"]

    - name: Checking conda versions
      shell: "{{ service_command }} 2>/dev/null || echo"
      become: "{{ ansible_become_user | default('root') is defined and ansible_become_user | default('root') != '' }}"
      environment:
        PATH: "{{conda_path}}/bin:/usr/bin:/usr:local/bin:/bin"
      register: version_cmd
      when: deployment_method == "conda"

    - name: Display web version
      debug:
        msg: "{{ version_cmd.stdout }}"
      when: deployment_method == "conda"

    - name: Display web version
      debug:
        msg: "{{ version_container.stdout }}"
      when: deployment_method in ["docker", "podman"]


- hosts: vault
  vars:
    role: "vault"
  tasks:
    - name: Include role vars
      include_vars: "{{asset_dir}}/playbooks/roles/{{ role }}/files/vars.yml"

    - name: Get vault version
      register: version_cmd
      shell:
        cmd: >
          {{ansible_python_interpreter}} -c "from urllib.request import urlopen;
          import json;
          conn=urlopen('http://localhost:5002/vault/status');
          print(json.loads(conn.read().decode()).get('version', '0.0.0'));
          conn.close()" 2> /dev/null || echo

    - name: Display vault version
      debug:
        msg: "{{ version_cmd.stdout }}"


- hosts: core
  vars:
    ansible_user: "{{core_ansible_user}}"
  tasks:
    - name: Get core version
      register: core
      shell:
        cmd: >
          {{ core_install_dir | regex_replace('^~', ansible_env.HOME) }}/bin/freva
          -V 2> /dev/null | awk '{print $NF}';

    - name: Display core version
      debug:
        msg: "{{ core.stdout }}"
