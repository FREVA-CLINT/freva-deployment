---
- hosts: solr

  vars:
    ansible_python_interpreter: "{{ solr_ansible_python_interpreter }}"
    continer_name: "{{ solr_name }}"
    docker_cmd: >
        -e CORE=files
        -e NUM_BACKUPS=7
        -e SOLR_HEAP={{solr_mem}}
        --rm
        -v /opt/freva/{{project_name}}/solr_service:/var/solr/data:z
        -v /opt/freva/freva-service-config/solr/managed-schema.xml:/opt/solr/managed-schema.xml:z
        -v /opt/freva/freva-service-config/solr/create_cores.sh:/docker-entrypoint-initdb.d/create_cores.sh:z
        -v /opt/freva/freva-service-config/solr/synonyms.txt:/opt/solr/synonyms.txt:z
        -v /opt/freva/freva-service-config/solr/daily_backup.sh:/usr/local/bin/daily_backup:z
        -p {{ solr_port }}:8983 -t
        --name {{solr_name}}
        -t solr:latest
    ansible_become_user: "{{ solr_ansible_become_user | default('root') }}"
    use_become: "{{ solr_ansible_become_user is defined and solr_ansible_become_user != '' }}"
  tasks:
    - name: Copying docker/podman wrapper script
      copy:
        src: "{{ asset_dir }}/scripts/docker-or-podman"
        dest: /tmp/docker-or-podman
        mode: "0775"
    - name: Registering systemctl path
      stat:
        path: /usr/bin/systemctl
      register: systemctl
    - name: Registering anacron path
      stat:
        path: /etc/cron.daily
      register: cron
    - name: Stopping services and deleting existing containers
      become: "{{use_become}}"
      shell: >
        systemctl stop {{solr_name}};
        /tmp/docker-or-podman rm {{solr_name}};
        /tmp/docker-or-podman rmi -f {{solr_name}};
        /tmp/docker-or-podman rmi -f solr;
        exit 0
      ignore_errors: true
    - pause: seconds=5
    - name: Deleting config file
      file:
        state: absent
        force: true
        path: "/opt/freva/freva-service-config/"
      become: "{{use_become}}"
    - name: Creating docker network
      shell: >
        /tmp/docker-or-podman network create "{{ project_name }}";
        exit 0
      ignore_errors: true
      become: "{{use_become}}"
    - name: Cleaning existing directory structure
      file:
        path: /opt/freva/{{ project_name }}/solr_service
        state: absent
      when: solr_wipe == true
      become: "{{use_become}}"
    - name: Creating directory structure
      file:
        path: /opt/freva/{{ project_name }}/solr_service
        state: directory
        owner: 8983
        group: 8983
        recurse: true
      become: "{{use_become}}"
    - name: Getting additional configurations
      git:
        repo: https://github.com/FREVA-CLINT/freva-service-config.git
        dest: /opt/freva/freva-service-config
        update: true
      become: "{{use_become}}"
    - name: Copy systemd files
      copy:
        src: "{{ asset_dir }}/scripts/create_systemd.py"
        dest: /tmp/create_systemd.py
        mode: "0755"
      become: "{{use_become}}"
    - name: Pulling container
      shell: /tmp/docker-or-podman pull docker.io/solr:latest
      become: "{{use_become}}"
    - name: Copy cron create script to target machine
      copy: src="{{ asset_dir }}/scripts/create_cron.sh" dest=/tmp/solr_service/
      become: "{{use_become}}"
    - name: Starting solr service
      shell: /tmp/create_systemd.py {{solr_name}} run --enable {{docker_cmd}}
      when: systemctl.stat.exists == true
      become: "{{use_become}}"
    - pause: seconds=3
    - name: Creating cron jobs
      shell: >
        sh /tmp/solr_service/create_cron.sh "{{ solr_name }}" "{{solr_email}}"
      when: systemctl.stat.exists == true
      become: "{{use_become}}"
    - name: Deleting tmporary files
      file:
        path: "{{item}}"
        state: absent
      with_items:
        - /tmp/docker-or-podman
        - /tmp/create_systemd.py
      become: "{{use_become}}"
