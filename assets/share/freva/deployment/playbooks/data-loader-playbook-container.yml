---
- name: Deploying redis cache
  hosts: redis_cache

  become: "{{ redis_cache_ansible_become_user is defined and redis_cache_ansible_become_user != '' }}"
  vars:
    ansible_become_user: "{{ redis_cache_ansible_become_user | default('root') }}"
    compose_file: '{{redis_cache_data_path|regex_replace("^~", ansible_env.HOME)}}/compose_services/redis_cache-compose.yml'
    become: "{{ redis_cache_ansible_become_user is defined and redis_cache_ansible_become_user != '' }}"
    data_path: '{{redis_cache_data_path|regex_replace("^~", ansible_env.HOME)}}'
    redis_data: '{{redis_cache_data_path|regex_replace("^~", ansible_env.HOME)}}/caching'
    redis_volumes:
      - '{{redis_cache_data_path|regex_replace("^~", ansible_env.HOME)}}/caching'
  tasks:
    - name: Writing redis-cache information
      copy:
        content: "{{redis_cache_information}}"
        dest: "{{data_path}}/.redis-cache.json"

    - name: Registering systemctl path
      stat:
        path: /usr/bin/systemctl
      register: systemctl

    - name: Copying docker/podman wrapper script
      copy:
        src: "{{ asset_dir }}/scripts/docker-or-podman"
        dest: /tmp/docker-or-podman
        mode: "0775"

    - name: collect facts about system services
      service_facts:
      register: services_state

    - name: Decode Base64 information content
      set_fact:
        information: "{{ redis_cache_information | b64decode }}"

    - name: Set all additional variables
      set_fact:
        username: "{{ information.user }}"
        password: "{{ information.passwd }}"

    - name: Getting additional configurations
      git:
        repo: https://github.com/FREVA-CLINT/freva-service-config.git
        dest: '{{redis_data}}'
        update: true
        force: true

    - name: Adjusting configuration onwnership
      file:
        recurse: true
        path: '{{redis_data}}'

    - name: Creating service data directory structure
      file:
        path: "{{item}}"
        state: directory
        recurse: true
      with_items:
        - '{{redis_data}}/certs'
        - '{{data_path}}/compose_services'

    - name: Pulling container
      shell:
        cmd: /tmp/docker-or-podman pull docker.io/redis:latest

    - name: Write ssl key to file
      copy:
        content: "{{ information.ssl_key }}"
        dest: "{{redis_data}}/certs/client-key.pem"

    - name: Write ssh cert to file
      copy:
        content: "{{ information.ssl_cert }}"
        dest: "{{redis_data}}/certs/client-cert.pem"

    - name: Creating compose file
      template:
        src: "{{ asset_dir }}/playbooks/redis-cache-compose-template.yml"
        dest: "{{compose_file}}"

    - name: Creating systemd services
      ansible.builtin.script:
        cmd: "{{asset_dir}}/scripts/create_systemd.py redis_cache compose --enable -p redis --gracious -f {{compose_file}} up --remove-orphans"
      environment:
        DEBUG: '{{ debug }}'
      when: systemctl.stat.exists == true and debug == false

    - name: Starting compose service
      shell: /tmp/docker-or-podman compose -f {{compose_file}} up -d
      when: systemctl.stat.exists == false or debug == true

    - name: Deleting tmporary files
      file:
        path: /tmp/docker-or-podman
        state: absent

- name: Setting up data loader host
  hosts: data_portal_scheduler
  become: "{{ data_portal_scheduler_ansible_become_user is defined and data_portal_scheduler_ansible_become_user != '' }}"
  vars:
    ansible_become_user: "{{ data_portal_scheduler_ansible_become_user | default('root') }}"
    information_enc: '{{data_portal_scheduler_information}}'

  tasks:

    - name: Set all additional variables
      set_fact:
        systemd_path: "{{ '/etc/systemd/system' if ansible_become_user == 'root' else '~/.config/systemd/user' }}"
        info_dir: "{{ '/root' if ansible_become_user == 'root' else ansible_env.HOME}}"
        scope: "{{ 'system' if ansible_become_user == 'root' else 'user'}}"

    - name: Writing redis-cache information
      copy:
        content: "{{information_enc}}"
        dest: "{{info_dir}}/.data-portal-cluster-config.json"
        force: true

    - name: Create systemd path
      file:
        recurse: true
        path: '{{systemd_path}}'
        force: true

    - name: Copying systemd unit file
      copy:
        src: "{{ asset_dir }}/playbooks/data-loader-template.service"
        dest: "{{systemd_path|regex_replace('^~', ansible_env.HOME)}}/data-loader@.service"
        mode: '0644'
        force: true


    - name: Reloading systemd
      systemd:
        name: data-loader@scheduler.service
        daemon_reload: true
        state: started
        enabled: true
        scope: "{{scope}}"


- name: Setting up data loader worker
  hosts: data_portal_hosts
  become: "{{ data_portal_hosts_ansible_become_user is defined and data_portal_hosts_ansible_become_user != '' }}"
  vars:
    ansible_become_user: "{{ data_portal_hosts_ansible_become_user | default('root') }}"
    information: '{{data_portal_hosts_information}}'

  tasks:

    - name: Set all additional variables
      set_fact:
        systemd_path: "{{ '/etc/systemd/system' if ansible_become_user == 'root' else '~/.config/systemd/user' }}"
        info_dir: "{{ '/root' if ansible_become_user == 'root' else ansible_env.HOME}}"
        scope: "{{ 'system' if ansible_become_user == 'root' else 'user'}}"

    - name: Writing redis-cache information
      copy:
        content: "{{information}}"
        dest: "{{info_dir}}/.data-portal-cluster-config.json"
        force: true

    - name: Create systemd path
      file:
        recurse: true
        path: '{{systemd_path}}'
        force: true

    - name: Copying systemd unit file
      copy:
        src: "{{ asset_dir }}/playbooks/data-loader-template.service"
        dest: "{{systemd_path|regex_replace('^~', ansible_env.HOME)}}/data-loader@.service"
        mode: '0644'
        force: true


    - name: Reloading systemd
      systemd:
        name: data-loader@worker.service
        daemon_reload: true
        state: started
        enabled: true
        scope: "{{scope}}"
