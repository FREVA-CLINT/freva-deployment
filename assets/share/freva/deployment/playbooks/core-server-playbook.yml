---
- hosts: core

  become: "{{ core_ansible_become_user is defined and core_ansible_become_user != '' }}"
  vars:
    ansible_python_interpreter: "{{ core_ansible_python_interpreter }}"
    conda_bin: "{{ core_install_dir | regex_replace('^~', ansible_env.HOME) }}/bin"
    pkg_mgr: "conda"
    ansible_become_user: "{{ core_ansible_become_user  | default('root')}}"
    allow_world_readable_tmpfiles: true
    conda_exec_path: >
        "{{ core_conda_exec_path
        if core_conda_exec_path is defined else '' }}"
    eval_path: "freva/evaluation_system.conf"
  tasks:
    - name: Creating temp. dir
      tempfile:
        state: directory
        prefix: evaluation_system
      register: tempdir
    - name: Cloning the evluation_system reposiotry
      git:
        repo: "{{ core_git_url }}"
        dest: "{{tempdir.path}}"
        executable: "{{core_git_path | regex_replace('^~', ansible_env.HOME)}}"
    - name: Getting status of the conda env
      stat:
        path: "{{ core_install_dir | regex_replace('^~', ansible_env.HOME)}}/bin/freva"
      register: freva_path
    - name: Installing temp micromamba
      shell:
        cmd: "curl -Ls https://micro.mamba.pm/api/micromamba/{{core_arch}}/latest | tar -xvj bin/micromamba"
        chdir: "{{tempdir.path}}"
      when: not freva_path.stat.exists
    - name: Installing freva
      command:
        cmd: "bin/micromamba env create -y -q -p {{core_install_dir}} -c conda-forge freva={{core_version}} mamba conda"
        chdir: "{{tempdir.path}}"
        creates: "{{core_install_dir|regex_replace('^~', ansible_env.HOME)}}/bin/freva"
      when: not freva_path.stat.exists
    - name: Check if mamba exists
      stat:
        path: "{{ core_install_dir | regex_replace('^~', ansible_env.HOME)}}/bin/mamba"
      register: mamba_check
    - name: Set variable for package manager
      set_fact:
        pkg_mgr: "mamba"
      when: mamba_check.stat.exists
    - name: Updating existing freva
      shell:
        cmd: "{{conda_bin}}/{{pkg_mgr}} install -y -q -p {{core_install_dir}} -c conda-forge freva={{core_version}}"
      environment:
        PATH: "{{conda_bin}}"
      when: freva_path.stat.exists
    - name: Preparing creation of directory structure
      file:
        path: "{{ core_root_dir | regex_replace('^~', ansible_env.HOME) }}"
        state: directory
    - name: Creating directory structure
      file:
        path: "{{ item }}"
        state: directory
        mode: "{{ '2775' if core_admin_group is defined else '2755' }}"
        group: "{{ core_admin_group if core_admin_group is defined else omit}}"
      with_items:
        - "{{ core_root_dir | regex_replace('^~', ansible_env.HOME) }}/freva/"
        - "{{ core_root_dir | regex_replace('^~', ansible_env.HOME) }}/plugins/"
    - name: Creating user work directory
      file:
        path: "{{core_base_dir_location | regex_replace('^~', ansible_env.HOME)}}"
        state: directory
        mode: "3775"
      when: core_base_dir_location | length != 0
      ignore_errors: true
    - name: Creating workload manager output
      file:
        path: "{{core_scheduler_output_dir | regex_replace('^~', ansible_env.HOME)}}"
        state: directory
        mode: "3775"
      ignore_errors: true
      when: core_scheduler_output_dir | length != 0
    - name: Creating preview path
      file:
        path: "{{core_preview_path | regex_replace('^~', ansible_env.HOME)}}"
        state: directory
        mode: "3775"
      when: core_preview_path | length != 0
      ignore_errors: true
    - name: Registering evaluation_sytem path
      stat:
        path: "{{ core_root_dir | regex_replace('^~', ansible_env.HOME)}}/freva/evaluation_system.conf"
      register: eval_conf
    - name: Inserting evaluation_sytem.conf file
      copy:
        src: "{{ core_dump }}"
        dest: "{{ core_root_dir | regex_replace('^~', ansible_env.HOME) }}/freva/evaluation_system.conf"
        mode: "{{ '2664' if core_admin_group is defined else '2644' }}"
        group: "{{ core_admin_group if core_admin_group is defined else omit}}"
      when: (eval_conf.stat.exists != true)
    - name: Inserting evaluation_system.config file to temp location
      copy:
        src: "{{ core_dump }}"
        dest: "{{tempdir.path}}/evaluation_system.conf"
    - name: Inserting evaluation_system.conf file
      copy:
        src: "{{tempdir.path}}/evaluation_system.conf"
        dest: "{{ core_root_dir | regex_replace('^~', ansible_env.HOME)}}/freva/evaluation_system.conf"
        remote_src: true
        group: "{{ core_admin_group if core_admin_group is defined else omit}}"
        mode: "{{ '2664' if core_admin_group is defined else '2644' }}"
      when: not freva_path.stat.exists
    - name: Installing additional python packages
      command:
        cmd: "{{conda_bin}}/python -m pip install {{item}}"
      with_items:
        - "kernel-install"
        - "metadata-inspector"
    - name: Installing metadata-crawler
      ansible.builtin.script:
        cmd: >
          "{{asset_dir}}/scripts/download.py"
          "https://swift.dkrz.de/v1/dkrz_6681fd49-d4e5-44f6-bf39-307a187ed22e/data-crawler/data-crawler-linux64"
          "-o {{core_install_dir|regex_replace('^~', ansible_env.HOME)}}/sbin/data-crawler"
    - name: Getting status of drs_config.toml file
      stat:
        path: "{{ core_root_dir | regex_replace('^~', ansible_env.HOME)}}/freva/drs_config.toml"
      register: drs_path
    - name: Inserting drs_config.toml file
      copy:
        src: "{{tempdir.path}}/assets/drs_config.toml"
        dest: "{{ core_root_dir | regex_replace('^~', ansible_env.HOME)}}/freva/drs_config.toml"
        remote_src: true
        group: "{{ core_admin_group if core_admin_group is defined else omit}}"
        mode: "{{ '2664' if core_admin_group is defined else '2644' }}"
      when: not drs_path.stat.exists
    - name: Configuring evaluation_system
      command:
        cmd: "$PYTHON3 deploy.py {{ core_install_dir | regex_replace('^~', ansible_env.HOME) }} -s --no-conda"
        chdir: "{{tempdir.path}}"
      environment:
        PYTHON3: "{{ ansible_python_interpreter }}"
        EVALUATION_SYSTEM_CONFIG_FILE: "{{ core_root_dir | regex_replace('^~', ansible_env.HOME) }}/freva/evaluation_system.conf"
        PYTHON_VERSION: "{{core_python_version}}"
    - name: Copying Public key file
      copy:
        src: "{{ core_keyfile }}"
        dest: "{{ core_root_dir | regex_replace('^~', ansible_env.HOME) }}/freva/{{ project_name }}.crt"
        mode: "{{ '2664' if core_admin_group is defined else '2644' }}"
        group: "{{ core_admin_group if core_admin_group is defined else omit}}"
    - name: Deleting temporary files
      file:
        state: absent
        path: "{{tempdir.path}}"
