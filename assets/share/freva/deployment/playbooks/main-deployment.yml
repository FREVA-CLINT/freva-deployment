---
- name: Deploy Freva Core Library
  hosts: core
  tags:
    - core
  vars_files:
    - "./vars.yml"
  roles:
    - core

- name: Deploy Database
  hosts: db
  tags:
    - db
  vars_files:
    - "./vars.yml"
  become: "{{ db_ansible_become_user is defined and db_ansible_become_user != '' }}"
  become_user: "{{ db_ansible_become_user | default('root') }}"
  roles:
    - database

- name: Deploy Vault
  hosts: vault
  tags:
    - db
    - vault
  vars_files:
    - "./vars.yml"
  become: "{{ db_ansible_become_user is defined and db_ansible_become_user != '' }}"
  become_user: "{{ db_ansible_become_user | default('root') }}"
  roles:
    - vault

- name: Setup cache server
  hosts: redis
  tags:
    - freva_rest
  vars_files:
    - "./vars.yml"
  become: "{{ redis_ansible_become_user is defined and redis_ansible_become_user != '' }}"
  become_user: "{{ redis_ansible_become_user | default('root') }}"
  roles:
    - cache

- name: Setup data-loader scheduler
  hosts: data_portal_scheduler
  tags:
    - freva_rest
  vars_files:
    - "./vars.yml"
  vars:
    loader_service: "scheduler"
    ansible_become_user: "{{ data_portal_scheduler_ansible_become_user | default('root') }}"
  become: "{{ data_portal_scheduler_ansible_become_user is defined and data_portal_scheduler_ansible_become_user != '' }}"
  become_user: "{{ data_portal_scheduler_ansible_become_user | default('root') }}"
  roles:
    - data-loader

- name: Setup data-loader worker
  hosts: data_portal_hosts
  tags:
    - freva_rest
  vars_files:
    - "./vars.yml"
  vars:
    loader_service: "worker"
    ansible_become_user: "{{ data_portal_hosts_ansible_become_user | default('root') }}"
  become: "{{ data_portal_hosts_ansible_become_user is defined and data_portal_hosts_ansible_become_user != '' }}"
  become_user: "{{ data_portal_hosts_ansible_become_user | default('root') }}"
  roles:
    - data-loader

- name: Setup mongodb server
  hosts: mongodb_server
  tags:
    - freva_rest
  vars_files:
    - "./vars.yml"
  become: "{{ mongodb_server_ansible_become_user is defined and mongodb_server_ansible_become_user != '' }}"
  become_user: "{{ mongodb_server_ansible_become_user | default('root') }}"
  roles:
    - mongodb_server

- name: Setup search backend
  hosts: search_server
  tags:
    - freva_rest
  vars_files:
    - "./vars.yml"
  become: "{{ search_server_ansible_become_user is defined and search_server_ansible_become_user != '' }}"
  become_user: "{{ search_server_ansible_become_user | default('root') }}"
  roles:
    - search_server

- name: Deploy Freva Rest API
  hosts: freva_rest
  tags:
    - freva_rest
  vars_files:
    - "./vars.yml"
  become: "{{ freva_rest_ansible_become_user is defined and freva_rest_ansible_become_user != '' }}"
  become_user: "{{ redis_ansible_become_user | default('root') }}"
  roles:
    - freva-rest

- name: Prepare Web App
  hosts: core
  tags:
    - web
  vars_files:
    - "./vars.yml"
  become: "{{ core_ansible_become_user is defined and core_ansible_become_user != '' }}"
  become_user: "{{ core_become_user | default(core_ansible_user) }}"
  roles:
    - web-prep

- name: Deploy Web App
  hosts: web
  tags:
    - web
  vars_files:
    - "./vars.yml"
  become: "{{ web_ansible_become_user is defined and web_ansible_become_user != '' }}"
  become_user: "{{ web_become_user | default('root') }}"
  roles:
    - web


- name: Restarting the web service
  hosts: web
  tags:
    - db
    - freva_rest
  vars_files:
    - "./vars.yml"
  tasks:
    - name: Restarting web container via systemd
      systemd:
        name: "{{ web_name }}"
        state: restarted
        scope: "{{ 'system' if ansible_become is true else 'user'}}"
      ignore_errors: true
      failed_when: false
      when: deployment_method in ["conda", "docker", "podman"]

- name : Add monogDB secrets to vault
  hosts: freva_rest
  gather_facts: false
  vars:
    body:
      mongo.user: "{{ freva_rest_db_user }}"
      mongo.db: "search_stats"
      mongo.passwd: "{{ freva_rest_db_passwd }}"
      mongo.url: "mongodb://{{freva_rest_db_user}}:{{freva_rest_db_passwd}}@{{freva_rest_db_host}}:27017?timeoutMS=2000"
  tags:
    - freva_rest
  tasks:
    - name: POST request
      uri:
        url: "http://{{ freva_rest_vault_host }}:5002/vault/data"
        method: POST
        headers:
          password: "{{ root_passwd }}"
          Content-Type: "application/json"
        body: "{{ body | to_json }}"
        body_format: json
        timeout: 3
        return_content: true
        status_code: 201
