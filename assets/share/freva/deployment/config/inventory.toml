# This is the "default" freva deployment configuration file.
#
# - The file's syntax follows the `toml` markup language (https://toml.io).
# - Comments begin with the "#" character.
# - Blank lines are ignored.
# - Groups of hosts are delimited by [header] elements.
# - These groups define different deployment steps.
# - Additional configuration for each group is set in the config section of each header -> [header.config].
# - You can enter host names or IP addresses.
# - A host name/IP can be a member of multiple groups.

## The first part of this configuration defines general settings
## that are common among all deployment steps.

# The project name for this freva instance.
# NOTE: this key must be the first in the file.
project_name = "freva"

## Specify the path to the SSL certificate files used for secure connections
## to the vault server or as web certificates.
[certificates]

## Path to the public key file.
public_keyfile = ""

## Path to the private key file.
private_keyfile = ""

## Path to the chain file.
chain_keyfile = ""

[web]
# Set the host names where all web UI services will be deployed.
hosts = "localhost"

# If you have multiple hosts following a pattern, you can specify
# them like this:
## hosts = "alpha.example.org,beta.example.org,192.168.1.100,192.168.1.110"
## hosts = "www[001:006].example.com"

## Example: A collection of database servers in the "dbservers" group.

## Another example of host ranges, this time without leading zeros:
## hosts = "db-[99:101]-node.example.com"

[freva_rest]
## Set the host names running the freva-rest service.
hosts = "localhost"

[db]
## Set the host names running the MariaDB service.
hosts = "localhost"

[core]
### Set the host names where the freva command line interface will be installed.
hosts = "localhost"

### CONFIGURATION VARIABLES
## The following section defines important variables required for
## correct system deployment.

[db.config]

## Config variables for the database service.

## The database runs in a Docker container. You can change the port
## that is exposed to the external network. Every DB connection from
## outside the container uses this port.
port = 3306

## Set the username of the MariaDB user.
user = "freva"

## Set the name of the MariaDB database.
db = "frevadb"

## If the username running the deployment software and the username
## that installs the services differ, instruct Ansible to use the
## specified username for SSH connections to the target server.
## If left blank, the current username will be used.
ansible_user = ""

## You can set the db_host separately; if none is given (default),
## the one from the host names above will be used, this is mainly used
## for local debugging purpose.
db_host = ""

## Set the become (sudo) username to change to for installing the services.
## Leave blank to utilize a non-privileged user-based installation.
## Non-privileged installation means the system will be installed in the
## user space of the user that logs on to the system.
ansible_become_user = "root"

## Ansible needs a Python 3 interpreter on the target server. This interpreter
## can be set for custom Python 3 instances. By default, Ansible will try
## to use the default Python interpreter path /usr/bin/python.
ansible_python_interpreter = ""

## Indicate whether to empty any pre-existing folders/docker volumes.
## Useful for a truly fresh start (default: false).
wipe = false

## Set the path where the permanent database data should be stored.
## By default, this is set to /opt/freva/<project_name>/db_service.
data_path = "/opt/freva"

## In case you want to set a custom path to an Ansible playbook,
## you can do this here. By default, the deployment will use the playbook
## located in the user config directory.
## NOTE: Only adjust this if you know what you are doing. If you leave this
## blank, the system will use the default playbook (standard procedure).
db_playbook = ""

[freva_rest.config]
## Set the amount of memory allocated to the search engine (Solr).
solr_mem = "4g"

## Set the port for the freva_rest service.
freva_rest_port = 7777

## Set the become (sudo) username to change to for installing the services.
## Leave blank to utilize a non-privileged user-based installation.
## Non-privileged installation means the system will be installed in the
## user space of the user that logs on to the system.
ansible_become_user = "root"

## Ansible needs a Python 3 interpreter on the target server. This interpreter
## can be set for custom Python 3 instances. By default, Ansible will try
## to use the default Python interpreter path /usr/bin/python.
ansible_python_interpreter = ""

## If the username running the deployment software and the username
## that installs the services differ, instruct Ansible to use the
## specified username for SSH connections to the target server.
## If left blank, the current username will be used.
ansible_user = ""

## Indicate whether to empty any pre-existing folders/docker volumes.
## Useful for a truly fresh start (default: false).
wipe = false

## Set the path where the permanent freva-rest data should be stored.
## By default, this is set to /opt/freva.
data_path = "/opt/freva"

### The the host name of the redis-cache, this cache is used for caching
### different kinds of data. If not set this will fall back to the host name
### of the rest-api server.
redis_host = ""

### Set the hostname(s) for the data-loading portal. The data-loading portal
### is a services that provisions data via zarr. The data-loading portal is
### a distributed system, meaning that you can set multiple hostnames that
### form a distributed memory. The first entry will be used as the master
### scheduler and the consecutive ones as workers. If you leave this blank
## then the service will be disabled.
data_loader_portal_hosts = ""

### Ideally you only deploy the data loader service once. If the service
### is up and running you can skip setting it up again by setting the
### deploy_data_loader flag to false (default).
deploy_data_loader = false

### Authentication is done via open id connect. This deployment assumes that
## you have set up and configured a open id connect host. Set the url
## to the open id discovery. This url usually ends with
## `.well-known/openid-configuration`
oidc_url = ""


### Set the client id (app name) of the open id connect service.
oidc_client = "freva"

### If you have configured that your OIDC client needs a client secret
### you can define it here, if not then you don't have to set it
oidc_client_secret = ""


## In case you want to set a custom path to an Ansible playbook,
## you can do this here. By default, the deployment will use the playbook
## located in the user config directory.
## NOTE: Only adjust this if you know what you are doing. If you leave this
## blank, the system will use the default playbook (standard procedure).
freva_rest_playbook = ""

[core.config]
## List of users that can alter the configuration of the freva command line interface.
## If blank, the user that runs the deployment is chosen.
admins = ""

## The path where the core library should be installed.
## Conda is used for installing the core library. Setting this
## instructs Conda to install a new Conda environment into this folder.
install_dir = "/opt/freva/conda"

## The directory where the project configuration files will be stored.
## This can be useful if you want to set up multiple freva instances with
## the same software stack (Anaconda environment). Leave blank to use the
## same directory as anaconda installation directory.
root_dir = "/home/freva/freva-env"

## If you do not wish to install a new freva Conda environment but only
## (re)configure an already installed system, you can set the `install`
## variable to false. This can be useful if you have a central instance
## of freva deployed and want to set up a project-specific configuration
## that uses this central instance.
install = true

## The directory where user-specific output will be stored.
## If left blank, it defaults to the folder that holds the project
## specific (config) data `<root_dir>/work`.
base_dir_location = ""

## Set the directory holding user content, like plots, for the web user
## interface. Note: After a plugin application, display content of the plugin
## output will be copied to this directory. The default location of this
## directory (if left blank) is the user-specific output dir
## `<base_dir_location/share/preview`.
preview_path = ""

## Set the workload manager system. Currently available options are:
## "local", "slurm", "pbs", "lfs", "moab", "oar", "sge".
scheduler_system = "local"

## Set the path to the directory that contains the stdout of the plugins.
## This directory must be accessible to the web UI. The workload manager
## will write the stdout into this directory. Defaults to user-specific
## output dir `<base_dir_location>/share`.
scheduler_output_dir = ""

## Set the target architecture of the system where the backend will be installed.
## You can choose from the following options:
## Linux-x86_64 (default), Linux-aarch64, Linux-ppc64le, Linux-s390x,
## MacOSX-x86_64, MacOSX-arm64
arch = "Linux-x86_64"

## If you need to install the core or its configuration as a different user,
## set the ansible_become_user variable. This will install the core as a
## different user. Leave blank if not needed.
ansible_become_user = ""

## If the username running the deployment software and the username
## that installs the services differ, instruct Ansible to use the
## specified username for SSH connections to the target server.
## If left blank, the current username will be used.
ansible_user = ""

## Ansible needs a Python 3 interpreter on the target server. This interpreter
## can be set for custom Python 3 instances. By default, Ansible will try
## to use the default Python interpreter path /usr/bin/python.
ansible_python_interpreter = ""

## The core deployment needs git. If git is not in the default PATH variable,
## you can set the path to the git executable.
git_path = "/usr/bin/git"

## If you want to set special group rights for freva configuration files,
## you can set the admin_group variable. If `admin_group` is set, then config
## files and directories in the `base_dir_location` are only writable to
## `admin_group`.
admin_group = ""

## Indicate whether to empty any pre-existing folders/docker volumes.
## Useful for a truly fresh start (default: false).
wipe = false

## In case you want to set a custom path to an Ansible playbook,
## you can do this here. By default, the deployment will use the playbook
## located in the user config directory.
## NOTE: Only adjust this if you know what you are doing. If you leave this
## blank, the system will use the default playbook (standard procedure).
core_playbook = ""

[web.config]
## Set the URL of the web user interface.
project_website = "www.freva.dkrz.de"

## Ansible needs a Python 3 interpreter on the target server. This interpreter
## can be set for custom Python 3 instances. By default, Ansible will try
## to use the default Python interpreter path /usr/bin/python.
ansible_python_interpreter = ""

## If the username running the deployment software and the username
## that installs the services differ, instruct Ansible to use the
## specified username for SSH connections to the target server.
## If left blank, the current username will be used.
ansible_user = ""

## Set the path where the permanent web data should be stored.
## By default, this is set to /opt/freva.
data_path = "/opt/freva"

## Set the main HTML color scheme.
main_color = "Tomato"
## Set the HTML border colors.
border_color = "#6c2e1f"
## Set the HTML hover colors.
hover_color = "#d0513a"

## The "About Us" text is a small blurb about freva within the project.
about_us_text = ""

## Set the path to the institution logo. This should be the path to the logo
## as seen by the target system. Ensure this path exists on the target machine.
institution_logo = ""

## Set email addresses for contact points for users.
contacts = ""

## Set the postal address, which will appear in the footer of the website.
imprint = "Project name, German Climate Computing Centre (DKRZ), Bundesstr. 45a, 20146 Hamburg, Germany."

## Here you can set a lengthy project description.
## You can also set a path to a file containing the information,
## like an HTML file.
homepage_text = "Bal bla bla."

## Set a one-line blurb of the project.
homepage_heading = "Short description of the project."

## Set the name of the project/institution, such as FUB, DWD, DKZ, etc.
institution_name = "Freva"

## Set the workload manager scheduler host. The web app will log into this
## machine via SSH to submit plugin jobs.
scheduler_host = ["localhost"]

## Set the hosts that are allowed to execute WSGI code.
allowed_hosts = ["localhost"]

## Turn on/off debug mode on the website.
debug = false

## Specify the plugin ID to be used for the web tour.
guest_tour_result = 105

## Set the menu entries.
# Menu entries consist of three elements: [Label, URL, HTML ID] -> e.g., ["Plugins", "plugins:home", "plugin_menu"].
menu_entries = [
    ["Data-Browser", "solr:data_browser", "browser_menu"],
    ["Plugins", "plugins:home", "plugin_menu"],
    ["History", "history:history", "history_menu"],
    ["Result-Browser", "history:result_browser", "result_browser_menu"],
    ["Help", "plugins:about", "doc_menu"]
]

## In case you want to set a custom path to an Ansible playbook,
## you can do this here. By default, the deployment will use the playbook
## located in the user config directory.
## NOTE: Only adjust this if you know what you are doing. If you leave this
## blank, the system will use the default playbook (standard procedure).
web_playbook = ""

## Set the become (sudo) username to change to for installing the services.
## Leave blank to utilize a non-privileged user-based installation.
## Non-privileged installation means the system will be installed in the
## user space of the user that logs on to the system.
ansible_become_user = "root"
