---
- hosts: db

  vars:
    ansible_python_interpreter: "{{ db_ansible_python_interpreter }}"
    docker_cmd: >
        --net {{ project_name }} -v
        /opt/freva/{{project_name}}/db_service:/var/lib/mysql:z
        -e HOST={{ db_host }}
        -e NUM_BACKUPS=7
        -e PROJECT={{ project_name }}
        -e MYSQL_USER={{db_user}}
        -e MYSQL_PASSWORD='{{db_passwd}}'
        -e MYSQL_DATABASE={{db_db}}
        -e BACKUP_DIR=/var/lib/mysql/backup
        -p {{ db_port }}:3306
        --rm
        --name {{db_name}}
        -e MYSQL_ROOT_PASSWORD='{{ root_passwd }}'
        -v /root/freva-service-config/mysql/create_tables.sql:/docker-entrypoint-initdb.d/002_create_tables.sql:z
        -v /root/freva-service-config/mysql/daily_backup.sh:/usr/local/bin/daily_backup:z
        -t docker.io/mariadb:latest
    skip_tables_cmd: >
        --net {{ project_name }} -v
        /opt/freva/{{project_name}}/db_service:/var/lib/mysql:z
        -e HOST={{ db_host }}
        -e NUM_BACKUPS=7
        -e PROJECT={{ project_name }}
        -e MYSQL_USER={{db_user}}
        -e MYSQL_PASSWORD='{{db_passwd}}'
        -e MYSQL_DATABASE={{db_db}}
        -e BACKUP_DIR=/var/lib/mysql/backup
        -p {{ db_port }}:3306
        -e MYSQL_ROOT_PASSWORD='{{ root_passwd }}'
        --name {{db_name}}
        -v /root/freva-service-config/mysql/create_tables.sql:/docker-entrypoint-initdb.d/002_create_tables.sql:z
        -v /root/freva-service-config/mysql/daily_backup.sh:/usr/local/bin/daily_backup:z
        -v /tmp/reset_root_pw.sh:/tmp/reset_root_pw.sh:z
        -t docker.io/mariadb:latest mariadbd-safe --skip-grant-tables
    continer_name: "{{ db_name }}"
    vault_name: "{{project_name}}-vault"
    use_become: "{{ db_ansible_become_user is defined and db_ansible_become_user != '' }}"
  tasks:
    - name: Copying docker/podman wrapper script
      copy:
        src: "{{ asset_dir }}/scripts/docker-or-podman"
        dest: /tmp/docker-or-podman
        mode: "0775"
    - name: Registering systemctl path
      stat:
        path: /usr/bin/systemctl
      register: systemctl
    - name: Registering anacron path
      stat:
        path: /etc/cron.daily
      register: cron
    - name: Stopping services and deleting existing containers
      shell: >
        /tmp/docker-or-podman stop {{db_name}};
        systemctl stop {{db_name}};
        /tmp/docker-or-podman rm {{db_name}};
        /tmp/docker-or-podman rmi -f mariadb;
        echo 0
      become: "{{use_become}}"
      ignore_errors: true
    - name: Deleting config file
      file:
        state: absent
        force: true
        path: "/root/freva-service-config/"
      become: "{{use_become}}"
    - name: Pulling container
      become: "{{use_become}}"
      shell: /tmp/docker-or-podman pull docker.io/mariadb:latest
    - name: Creating docker network
      shell: >
        /tmp/docker-or-podman network create "{{ project_name }}";
        echo 0
      become: "{{use_become}}"
    - name: Cleaning existing directory structure
      file:
        path: /opt/freva/{{ project_name }}/db_service
        state: absent
      become: "{{use_become}}"
      when: db_wipe == true
    - name: Creating directory structure
      file:
        path: /opt/freva/{{ project_name }}/db_service
        state: directory
        recurse: true
        group: 999
        owner: 999
      become: "{{use_become}}"
    - name: Copying auxillary files to target machine
      become: "{{use_become}}"
      copy: src="{{ asset_dir }}/db_service/reset_root_pw.sh" dest=/tmp/
    - name: Copying systemd files
      copy:
        src: "{{ asset_dir }}/scripts/{{ item }}"
        dest: /tmp/{{ item }}
        mode: '0755'
      with_items:
        - "create_systemd.py"
        - "create_cron.sh"
    - name: Getting additional configurations
      become: "{{use_become}}"
      git:
        repo: https://github.com/FREVA-CLINT/freva-service-config.git
        dest: /root/freva-service-config
        update: true
    - name: Preparing the root password reset I
      become: "{{use_become}}"
      shell: /tmp/docker-or-podman run -d {{docker_cmd}}
    - pause: seconds=5
    - name: Preparing the root password reset II
      become: "{{use_become}}"
      shell: |
        /tmp/docker-or-podman rm -f {{db_name}}
    - name: Preparing the root password reset III
      become: "{{use_become}}"
      shell: /tmp/docker-or-podman run -d {{skip_tables_cmd}}
    - pause: seconds=2
    - name: Resetting the root password
      become: "{{use_become}}"
      shell: /tmp/docker-or-podman exec -it {{db_name}} bash /tmp/reset_root_pw.sh
    - name: Deleting temp. container
      become: "{{use_become}}"
      shell: |
        /tmp/docker-or-podman rm -f {{db_name}}
    - name: Creating systemd service
      become: "{{use_become}}"
      shell: |
        /tmp/create_systemd.py {{db_name}} run {{docker_cmd | trim}} --requires {{vault_name}} --enable
      when: systemctl.stat.exists == true
    - name: Creating cron jobs
      become: "{{use_become}}"
      shell: sh /tmp/create_cron.sh "{{ db_name }}" "{{db_email}}"
      when: cron.stat.exists == true
    - name: Restarting docker container
      become: "{{use_become}}"
      shell: systemctl restart "{{ db_name }}"
      when: systemctl.stat.exists == true
    - name: Creating potentially missing tables
      become: "{{use_become}}"
      shell: |
        /tmp/docker-or-podman exec -it {{db_name}} /bin/sh -c 'mariadb -u root -p{{root_passwd}} {{db_db}} < /docker-entrypoint-initdb.d/002_create_tables.sql'
    - name: Deleting auxillary files
      become: "{{use_become}}"
      file:
        state: absent
        path: "{{ item }}"
      with_items:
        - /tmp/create_systemd.py
        - /tmp/create_cron.sh
        - /tmp/reset_root_pw.sh
        - /tmp/docker-or-podman
