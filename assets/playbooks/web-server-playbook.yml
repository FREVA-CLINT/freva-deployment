---
- hosts: core

  vars:
    - ansible_python_interpreter: "{{ core_ansible_python_interpreter }}"
    - ansible_become_user: "{{ core_ansible_become_user if core_ansible_become_user is defined else 'root' }}"
  tasks:
    - name: Creating share directory with admin group
      file:
        path: "{{core_root_dir}}/freva/web"
        state: directory
        mode: "2775"
        group: "{{core_admin_group}}"
      become: "{{'yes' if core_ansible_become_user is defined else 'no' }}"
      when: core_admin_group is defined
    - name: Creating share directory without admin group
      file:
        path: "{{core_root_dir}}/freva/web"
        state: directory
        mode: "2775"
        recurse: true
      become: "{{'yes' if core_ansible_become_user is defined else 'no' }}"
      when: core_admin_group is not defined
    - name: Adding freva web config to the core structure
      copy:
        src: "{{ core_config_toml_file }}"
        dest: "{{ core_root_dir }}/freva/web/freva_web_conf.toml"
        mode: "2775"
      become: "{{'yes' if core_ansible_become_user is defined else 'no' }}"

- hosts: web

  vars:
    - ansible_python_interpreter: "{{ web_ansible_python_interpreter }}"
    - service_dir: /opt/freva/{{project_name}}/web_service
    - docker_web_cmd: >
        -p 8000:8000
        -v {{ core_root_dir }}:{{ core_root_dir }}:ro
        -v {{ core_base_dir_location }}:{{ core_base_dir_location }}:ro
        -e EVALUATION_SYSTEM_CONFIG_FILE={{core_root_dir}}/freva/evaluation_system.conf
        --name {{web_name}}
        -t registry.gitlab.dkrz.de/freva/freva_web/freva_web:production_dockers
    - docker_apache_cmd: >
        -v /opt/freva/{{project_name}}/web_service/freva_web.conf:/usr/local/apache2/conf/httpd.conf:z
        -v /opt/freva/{{project_name}}/web_service/server-cert.crt:/etc/ssl/certs/server-cert.crt:z
        -v /opt/freva/{{project_name}}/web_service/server-key.key:/etc/ssl/private/server-key.key:z
        -v /opt/freva/{{project_name}}/web_service/cacert.pem:/etc/ssl/certs/cacert.pem:z
        -e FREVA_HOST={{web_server_name}} -p 80:80 -p 443:443 httpd:latest
    - redis_name: "{{ project_name }}-redis"
    - apache_name: "{{project_name}}-httpd"
  tasks:
    - name: Copying docker/podman wrapper script
      copy:
        src: "{{ asset_dir }}/scripts/docker-or-podman"
        dest: /usr/local/bin/docker-or-podman
        mode: "0775"
      become: true
    - name: Getting register to core dir
      stat:
        path: "{{ core_root_dir }}/freva/evaluation_system.conf"
      register: core
    - name: Registering systemctl path
      stat:
        path: /usr/bin/systemctl
      register: systemctl
    - name: Exiting if core path does not exist on machine
      fail:
        msg: >
          "Error: core not available on machine. "
          "The core hasn't been deployed yet, or wasn't mounted into its "
          "expected location: {{core_root_dir}}"
      when: core.stat.exists == false
    - name: Stopping services
      shell: >
        systemctl stop {{ web_name }};
        systemctl stop {{ redis_name }};
        systemctl stop {{ apache_name }};
        /usr/local/bin/docker-or-podman stop {{web_name}};
        /usr/local/bin/docker-or-podman rm {{web_name}};
        /usr/local/bin/docker-or-podman stop {{redis_name}};
        /usr/local/bin/docker-or-podman rm {{redis_name}};
        /usr/local/bin/docker-or-podman stop {{apache_name}};
        /usr/local/bin/docker-or-podman rm {{apache_name}};
        echo 0
      ignore_errors: true
      become: true
    - name: Deleting existing web-directory
      file:
        state: absent
        path: "{{service_dir}}"
      become: true
    - name: Creating volume dir for web
      become: true
      file:
        path: "{{service_dir}}"
        state: directory
    - name: Copying key files files
      become: true
      copy:
        src: "{{item.src}}"
        dest: "{{item.dest}}"
      with_items:
        - {src: "{{asset_dir}}/web/freva_web.conf",
           dest: "{{service_dir}}/freva_web.conf"}
        - {src: "{{web_public_keyfile}}",
           dest: "{{service_dir}}/server-cert.crt"}
        - {src: "{{web_private_keyfile}}",
           dest: "{{service_dir}}/server-key.key"}
        - {src: "{{web_chain_keyfile}}",
           dest: "{{service_dir}}/cacert.pem"}
        - {src: "{{asset_dir}}/web/setup_web.sh",
           dest: "{{service_dir}}/setup_web.sh"}
    - name: Creating redis container
      become: true
      shell:
        cmd: >
          /usr/local/bin/docker-or-podman  run -d --name {{redis_name}}
          -p 6379:6379 redis:latest
    - name: Creating apache reverse proxy container
      become: true
      shell:
        cmd: >
          /usr/local/bin/docker-or-podman  run -d --name {{apache_name}}
          {{docker_apache_cmd}}
    - name: debug
      shell:
        cmd: >
          echo /usr/local/bin/docker-or-podman  run -d --name {{apache_name}} {{docker_apache_cmd}} > /tmp/podman_cmd
    - name: Getting freva_web image
      become: true
      shell: /usr/local/bin/docker-or-podman  run -d {{docker_web_cmd}}
    - name: Copying systemd files
      copy:
        src: "{{ asset_dir }}/scripts/create_systemd.py"
        dest: /tmp/create_systemd.py
        mode: "0755"
    - name: Creating system services
      become: true
      shell: |
          /tmp/create_systemd.py {{redis_name}}
          /tmp/create_systemd.py {{apache_name}}
          /tmp/create_systemd.py {{web_name}} --requires {{redis_name}} {{apache_name}} --enable
      when: systemctl.stat.exists == true
    - pause: seconds=5
    - name: Adding setup_web script
      become: true
      shell: >
        /usr/local/bin/docker-or-podman cp {{service_dir}}/setup_web.sh
        {{web_name}}:/tmp/setup_web.sh
    - name: Setting django admin
      become: true
      shell: >
        /usr/local/bin/docker-or-podman exec -it {{web_name}}
        /bin/bash /tmp/setup_web.sh {{root_passwd}}
    - name: Restarting web service
      become: true
      shell: systemctl restart {{web_name}}
      when: systemctl.stat.exists == true
    - name: Deleting tmporary files
      file:
        path: "{{item}}"
        state: absent
      with_items:
        - /tmp/{{project_name}}_web
        - /tmp/create_systemd.py
      become: true
