---
- hosts: core

  vars:
    - ansible_python_interpreter: "{{ core_ansible_python_interpreter }}"
    - ansible_become_user: "{{ core_ansible_become_user if core_ansible_become_user is defined else 'root' }}"
  tasks:
    - name: Getting register to the freva logo
      stat:
        path: "{{ core_institution_logo }}"
      register: logo
    - name: Creating share directory with admin group
      file:
        path: "{{core_root_dir}}/freva/web"
        state: directory
        mode: "2775"
        recurse: true
        group: "{{core_admin_group}}"
      become: "{{'yes' if core_ansible_become_user is defined else 'no' }}"
      when: core_admin_group is defined
    - name: Creating share directory without admin group
      file:
        path: "{{core_root_dir}}/freva/web"
        state: directory
        mode: "2775"
        recurse: true
      become: "{{'yes' if core_ansible_become_user is defined else 'no' }}"
      when: core_admin_group is not defined
    - name: Copy the logo if exists
      copy:
        src: "{{ core_institution_logo }}"
        dest: "{{core_root_dir}}/freva/web/logo.{{web_institution_logo_suffix}}"
        mode: "2775"
      become: "{{'yes' if core_ansible_become_user is defined else 'no' }}"
      when: logo.stat.exists == true
    - name: Adding freva web config to the core structure
      copy:
        src: "{{ core_config_toml_file }}"
        dest: "{{ core_root_dir }}/freva/web/freva_web_conf.toml"
        mode: "2775"
      become: "{{'yes' if core_ansible_become_user is defined else 'no' }}"

- hosts: web

  vars:
    - ansible_python_interpreter: "{{ web_ansible_python_interpreter }}"
    - docker_cmd: >
        -p 8000:8000 -p 80:80 -p 443:443
        -v /mnt/{{project_name}}/web_service:/srv/http:z
        -v {{ core_root_dir }}:{{ core_root_dir }}:z
        -v {{ core_base_dir_location }}:{{ core_base_dir_location }}:z
        -v {{ core_base_dir_location }}/share/preview:/srv/http/static/preview:z
        --name {{ web_name}} -t {{ web_name}}:latest
    - redis_name: "{{ project_name }}-redis"
  tasks:
    - name: Copying docker/podman wrapper script
      copy:
        src: "{{ asset_dir }}/scripts/docker-or-podman"
        dest: /usr/local/bin/docker-or-podman
        mode: "0775"
      become: true
    - name: Getting register to core dir
      stat:
        path: "{{ core_root_dir }}/freva/evaluation_system.conf"
      register: core
    - name: Registering systemctl path
      stat:
        path: /usr/bin/systemctl
      register: systemctl
    - name: Exiting if core path does not exist on machine
      fail:
        msg: >
          "Error: core not available on machine. "
          "The core hasn't been deployed yet, or wasn't mounted into its "
          "expected location: {{core_root_dir}}"
      when: core.stat.exists == false
    - name: Stopping services
      shell: >
        systemctl stop {{ web_name }};
        systemctl stop {{ redis_name }};
        /usr/local/bin/docker-or-podman stop {{web_name}};
        /usr/local/bin/docker-or-podman rm {{web_name}};
        /usr/local/bin/docker-or-podman rmi -f {{web_name}};
        /usr/local/bin/docker-or-podman stop {{redis_name}};
        /usr/local/bin/docker-or-podman rm {{redis_name}};
        echo 0
      ignore_errors: true
      become: true
#    - name: Creating docker network
#      shell: >
#        /usr/local/bin/docker-or-podman network create "{{ project_name }}";
#        echo 0
#      become: true
    - name: Deleting existing web-directory
      file:
        state: absent
        path: /mnt/{{ project_name }}/web_service
      become: true
      when: wipe == true
    - name: Copy auxillary files
      copy:
        src: "{{ asset_dir }}/web"
        dest: "/tmp/{{project_name}}_web"
        mode: "0755"
    - name: Adjusting freva_web.conf
      shell:
        chdir: "/tmp/{{project_name}}_web/web"
        cmd: >
          {{ansible_python_interpreter}} create_web_conf.py
          freva_web.conf freva_web.conf --website={{web_project_website}}
          --root-dir={{core_root_dir}} --project-name={{project_name}}
          --alias={{web_server_alias}} --server-name={{web_host}}
          --work-dir={{core_base_dir_location}}
    - name: Creating redis container
      become: true
      shell:
        cmd: >
          /usr/local/bin/docker-or-podman  pull redis:latest &&
          /usr/local/bin/docker-or-podman  run -d --name {{redis_name}}
          -p 6379:6379 redis:latest
    - name: Building freva_web image
      become: true
      shell:
        chdir: "/tmp/{{project_name}}_web/web"
        cmd: >
          /usr/local/bin/docker-or-podman  build
          --build-arg=core_url={{core_git_url}}
          --build-arg=core_branch={{core_branch}}
          --build-arg=build_root=/mnt/{{project_name}}/web_service
          --build-arg=git_url={{web_git_url}}
          --build-arg=git_branch={{web_branch}}
          --build-arg=root_dir={{core_root_dir}}
          --build-arg=PROJECT_NAME={{project_name}}
          -t {{ web_name }} .
    - name: Creating volume dir for web
      become: true
      file:
        path: /mnt/{{project_name}}/web_service
        state: directory
    - name: Running freva_web image
      become: true
      shell: /usr/local/bin/docker-or-podman  run -d {{docker_cmd}}
    - name: Copying systemd files
      copy:
        src: "{{ asset_dir }}/scripts/create_systemd.py"
        dest: /tmp/create_systemd.py
        mode: "0755"
    - name: Creating system services
      become: true
      shell: |
          /tmp/create_systemd.py {{redis_name}}
          /tmp/create_systemd.py {{web_name}} --requires {{redis_name}} --enable
      when: systemctl.stat.exists == true
    - pause: seconds=5
    - name: Building django page
      become: true
      shell: >
        /usr/local/bin/docker-or-podman exec -it {{web_name}}
        /bin/bash /tmp/setup_web.sh {{root_passwd}}
    - name: Restarting web service
      become: true
      shell: systemctl restart {{web_name}}
      when: systemctl.stat.exists == true
    - name: Deleting tmporary files
      file:
        path: "{{item}}"
        state: absent
      with_items:
        - /tmp/{{project_name}}_web
        - /tmp/create_systemd.py
      become: true
